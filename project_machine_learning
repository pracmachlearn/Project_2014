<!DOCTYPE html>
<!-- saved from url=(0014)about:internet -->
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta http-equiv="x-ua-compatible" content="IE=9" >

<title>Practical Machine Learning Project </title>

<style type="text/css">
body, td {
   font-family: sans-serif;
   background-color: white;
   font-size: 12px;
   margin: 8px;
}

tt, code, pre {
   font-family: 'DejaVu Sans Mono', 'Droid Sans Mono', 'Lucida Console', Consolas, Monaco, monospace;
}

h1 { 
   font-size:2.2em; 
}

h2 { 
   font-size:1.8em; 
}

h3 { 
   font-size:1.4em; 
}

h4 { 
   font-size:1.0em; 
}

h5 { 
   font-size:0.9em; 
}

h6 { 
   font-size:0.8em; 
}

a:visited {
   color: rgb(50%, 0%, 50%);
}

pre {	
   margin-top: 0;
   max-width: 95%;
   border: 1px solid #ccc;
   white-space: pre-wrap;
}

pre code {
   display: block; padding: 0.5em;
}

code.r, code.cpp {
   background-color: #F8F8F8;
}

table, td, th {
  border: none;
}

blockquote {
   color:#666666;
   margin:0;
   padding-left: 1em;
   border-left: 0.5em #EEE solid;
}

hr {
   height: 0px;
   border-bottom: none;
   border-top-width: thin;
   border-top-style: dotted;
   border-top-color: #999999;
}

@media print {
   * { 
      background: transparent !important; 
      color: black !important; 
      filter:none !important; 
      -ms-filter: none !important; 
   }

   body { 
      font-size:12pt; 
      max-width:100%; 
   }
       
   a, a:visited { 
      text-decoration: underline; 
   }

   hr { 
      visibility: hidden;
      page-break-before: always;
   }

   pre, blockquote { 
      padding-right: 1em; 
      page-break-inside: avoid; 
   }

   tr, img { 
      page-break-inside: avoid; 
   }

   img { 
      max-width: 100% !important; 
   }

   @page :left { 
      margin: 15mm 20mm 15mm 10mm; 
   }
     
   @page :right { 
      margin: 15mm 10mm 15mm 20mm; 
   }

   p, h2, h3 { 
      orphans: 3; widows: 3; 
   }

   h2, h3 { 
      page-break-after: avoid; 
   }
}

</style>

<!-- Styles for R syntax highlighter -->
<style type="text/css">
   pre .operator,
   pre .paren {
     color: rgb(104, 118, 135)
   }

   pre .literal {
     color: rgb(88, 72, 246)
   }

   pre .number {
     color: rgb(0, 0, 205);
   }

   pre .comment {
     color: rgb(76, 136, 107);
   }

   pre .keyword {
     color: rgb(0, 0, 255);
   }

   pre .identifier {
     color: rgb(0, 0, 0);
   }

   pre .string {
     color: rgb(3, 106, 7);
   }
</style>

<!-- R syntax highlighter -->
<script type="text/javascript">
var hljs=new function(){function m(p){return p.replace(/&/gm,"&amp;").replace(/</gm,"&lt;")}function f(r,q,p){return RegExp(q,"m"+(r.cI?"i":"")+(p?"g":""))}function b(r){for(var p=0;p<r.childNodes.length;p++){var q=r.childNodes[p];if(q.nodeName=="CODE"){return q}if(!(q.nodeType==3&&q.nodeValue.match(/\s+/))){break}}}function h(t,s){var p="";for(var r=0;r<t.childNodes.length;r++){if(t.childNodes[r].nodeType==3){var q=t.childNodes[r].nodeValue;if(s){q=q.replace(/\n/g,"")}p+=q}else{if(t.childNodes[r].nodeName=="BR"){p+="\n"}else{p+=h(t.childNodes[r])}}}if(/MSIE [678]/.test(navigator.userAgent)){p=p.replace(/\r/g,"\n")}return p}function a(s){var r=s.className.split(/\s+/);r=r.concat(s.parentNode.className.split(/\s+/));for(var q=0;q<r.length;q++){var p=r[q].replace(/^language-/,"");if(e[p]){return p}}}function c(q){var p=[];(function(s,t){for(var r=0;r<s.childNodes.length;r++){if(s.childNodes[r].nodeType==3){t+=s.childNodes[r].nodeValue.length}else{if(s.childNodes[r].nodeName=="BR"){t+=1}else{if(s.childNodes[r].nodeType==1){p.push({event:"start",offset:t,node:s.childNodes[r]});t=arguments.callee(s.childNodes[r],t);p.push({event:"stop",offset:t,node:s.childNodes[r]})}}}}return t})(q,0);return p}function k(y,w,x){var q=0;var z="";var s=[];function u(){if(y.length&&w.length){if(y[0].offset!=w[0].offset){return(y[0].offset<w[0].offset)?y:w}else{return w[0].event=="start"?y:w}}else{return y.length?y:w}}function t(D){var A="<"+D.nodeName.toLowerCase();for(var B=0;B<D.attributes.length;B++){var C=D.attributes[B];A+=" "+C.nodeName.toLowerCase();if(C.value!==undefined&&C.value!==false&&C.value!==null){A+='="'+m(C.value)+'"'}}return A+">"}while(y.length||w.length){var v=u().splice(0,1)[0];z+=m(x.substr(q,v.offset-q));q=v.offset;if(v.event=="start"){z+=t(v.node);s.push(v.node)}else{if(v.event=="stop"){var p,r=s.length;do{r--;p=s[r];z+=("</"+p.nodeName.toLowerCase()+">")}while(p!=v.node);s.splice(r,1);while(r<s.length){z+=t(s[r]);r++}}}}return z+m(x.substr(q))}function j(){function q(x,y,v){if(x.compiled){return}var u;var s=[];if(x.k){x.lR=f(y,x.l||hljs.IR,true);for(var w in x.k){if(!x.k.hasOwnProperty(w)){continue}if(x.k[w] instanceof Object){u=x.k[w]}else{u=x.k;w="keyword"}for(var r in u){if(!u.hasOwnProperty(r)){continue}x.k[r]=[w,u[r]];s.push(r)}}}if(!v){if(x.bWK){x.b="\\b("+s.join("|")+")\\s"}x.bR=f(y,x.b?x.b:"\\B|\\b");if(!x.e&&!x.eW){x.e="\\B|\\b"}if(x.e){x.eR=f(y,x.e)}}if(x.i){x.iR=f(y,x.i)}if(x.r===undefined){x.r=1}if(!x.c){x.c=[]}x.compiled=true;for(var t=0;t<x.c.length;t++){if(x.c[t]=="self"){x.c[t]=x}q(x.c[t],y,false)}if(x.starts){q(x.starts,y,false)}}for(var p in e){if(!e.hasOwnProperty(p)){continue}q(e[p].dM,e[p],true)}}function d(B,C){if(!j.called){j();j.called=true}function q(r,M){for(var L=0;L<M.c.length;L++){if((M.c[L].bR.exec(r)||[null])[0]==r){return M.c[L]}}}function v(L,r){if(D[L].e&&D[L].eR.test(r)){return 1}if(D[L].eW){var M=v(L-1,r);return M?M+1:0}return 0}function w(r,L){return L.i&&L.iR.test(r)}function K(N,O){var M=[];for(var L=0;L<N.c.length;L++){M.push(N.c[L].b)}var r=D.length-1;do{if(D[r].e){M.push(D[r].e)}r--}while(D[r+1].eW);if(N.i){M.push(N.i)}return f(O,M.join("|"),true)}function p(M,L){var N=D[D.length-1];if(!N.t){N.t=K(N,E)}N.t.lastIndex=L;var r=N.t.exec(M);return r?[M.substr(L,r.index-L),r[0],false]:[M.substr(L),"",true]}function z(N,r){var L=E.cI?r[0].toLowerCase():r[0];var M=N.k[L];if(M&&M instanceof Array){return M}return false}function F(L,P){L=m(L);if(!P.k){return L}var r="";var O=0;P.lR.lastIndex=0;var M=P.lR.exec(L);while(M){r+=L.substr(O,M.index-O);var N=z(P,M);if(N){x+=N[1];r+='<span class="'+N[0]+'">'+M[0]+"</span>"}else{r+=M[0]}O=P.lR.lastIndex;M=P.lR.exec(L)}return r+L.substr(O,L.length-O)}function J(L,M){if(M.sL&&e[M.sL]){var r=d(M.sL,L);x+=r.keyword_count;return r.value}else{return F(L,M)}}function I(M,r){var L=M.cN?'<span class="'+M.cN+'">':"";if(M.rB){y+=L;M.buffer=""}else{if(M.eB){y+=m(r)+L;M.buffer=""}else{y+=L;M.buffer=r}}D.push(M);A+=M.r}function G(N,M,Q){var R=D[D.length-1];if(Q){y+=J(R.buffer+N,R);return false}var P=q(M,R);if(P){y+=J(R.buffer+N,R);I(P,M);return P.rB}var L=v(D.length-1,M);if(L){var O=R.cN?"</span>":"";if(R.rE){y+=J(R.buffer+N,R)+O}else{if(R.eE){y+=J(R.buffer+N,R)+O+m(M)}else{y+=J(R.buffer+N+M,R)+O}}while(L>1){O=D[D.length-2].cN?"</span>":"";y+=O;L--;D.length--}var r=D[D.length-1];D.length--;D[D.length-1].buffer="";if(r.starts){I(r.starts,"")}return R.rE}if(w(M,R)){throw"Illegal"}}var E=e[B];var D=[E.dM];var A=0;var x=0;var y="";try{var s,u=0;E.dM.buffer="";do{s=p(C,u);var t=G(s[0],s[1],s[2]);u+=s[0].length;if(!t){u+=s[1].length}}while(!s[2]);if(D.length>1){throw"Illegal"}return{r:A,keyword_count:x,value:y}}catch(H){if(H=="Illegal"){return{r:0,keyword_count:0,value:m(C)}}else{throw H}}}function g(t){var p={keyword_count:0,r:0,value:m(t)};var r=p;for(var q in e){if(!e.hasOwnProperty(q)){continue}var s=d(q,t);s.language=q;if(s.keyword_count+s.r>r.keyword_count+r.r){r=s}if(s.keyword_count+s.r>p.keyword_count+p.r){r=p;p=s}}if(r.language){p.second_best=r}return p}function i(r,q,p){if(q){r=r.replace(/^((<[^>]+>|\t)+)/gm,function(t,w,v,u){return w.replace(/\t/g,q)})}if(p){r=r.replace(/\n/g,"<br>")}return r}function n(t,w,r){var x=h(t,r);var v=a(t);var y,s;if(v){y=d(v,x)}else{return}var q=c(t);if(q.length){s=document.createElement("pre");s.innerHTML=y.value;y.value=k(q,c(s),x)}y.value=i(y.value,w,r);var u=t.className;if(!u.match("(\\s|^)(language-)?"+v+"(\\s|$)")){u=u?(u+" "+v):v}if(/MSIE [678]/.test(navigator.userAgent)&&t.tagName=="CODE"&&t.parentNode.tagName=="PRE"){s=t.parentNode;var p=document.createElement("div");p.innerHTML="<pre><code>"+y.value+"</code></pre>";t=p.firstChild.firstChild;p.firstChild.cN=s.cN;s.parentNode.replaceChild(p.firstChild,s)}else{t.innerHTML=y.value}t.className=u;t.result={language:v,kw:y.keyword_count,re:y.r};if(y.second_best){t.second_best={language:y.second_best.language,kw:y.second_best.keyword_count,re:y.second_best.r}}}function o(){if(o.called){return}o.called=true;var r=document.getElementsByTagName("pre");for(var p=0;p<r.length;p++){var q=b(r[p]);if(q){n(q,hljs.tabReplace)}}}function l(){if(window.addEventListener){window.addEventListener("DOMContentLoaded",o,false);window.addEventListener("load",o,false)}else{if(window.attachEvent){window.attachEvent("onload",o)}else{window.onload=o}}}var e={};this.LANGUAGES=e;this.highlight=d;this.highlightAuto=g;this.fixMarkup=i;this.highlightBlock=n;this.initHighlighting=o;this.initHighlightingOnLoad=l;this.IR="[a-zA-Z][a-zA-Z0-9_]*";this.UIR="[a-zA-Z_][a-zA-Z0-9_]*";this.NR="\\b\\d+(\\.\\d+)?";this.CNR="\\b(0[xX][a-fA-F0-9]+|(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)";this.BNR="\\b(0b[01]+)";this.RSR="!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|\\.|-|-=|/|/=|:|;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~";this.ER="(?![\\s\\S])";this.BE={b:"\\\\.",r:0};this.ASM={cN:"string",b:"'",e:"'",i:"\\n",c:[this.BE],r:0};this.QSM={cN:"string",b:'"',e:'"',i:"\\n",c:[this.BE],r:0};this.CLCM={cN:"comment",b:"//",e:"$"};this.CBLCLM={cN:"comment",b:"/\\*",e:"\\*/"};this.HCM={cN:"comment",b:"#",e:"$"};this.NM={cN:"number",b:this.NR,r:0};this.CNM={cN:"number",b:this.CNR,r:0};this.BNM={cN:"number",b:this.BNR,r:0};this.inherit=function(r,s){var p={};for(var q in r){p[q]=r[q]}if(s){for(var q in s){p[q]=s[q]}}return p}}();hljs.LANGUAGES.cpp=function(){var a={keyword:{"false":1,"int":1,"float":1,"while":1,"private":1,"char":1,"catch":1,"export":1,virtual:1,operator:2,sizeof:2,dynamic_cast:2,typedef:2,const_cast:2,"const":1,struct:1,"for":1,static_cast:2,union:1,namespace:1,unsigned:1,"long":1,"throw":1,"volatile":2,"static":1,"protected":1,bool:1,template:1,mutable:1,"if":1,"public":1,friend:2,"do":1,"return":1,"goto":1,auto:1,"void":2,"enum":1,"else":1,"break":1,"new":1,extern:1,using:1,"true":1,"class":1,asm:1,"case":1,typeid:1,"short":1,reinterpret_cast:2,"default":1,"double":1,register:1,explicit:1,signed:1,typename:1,"try":1,"this":1,"switch":1,"continue":1,wchar_t:1,inline:1,"delete":1,alignof:1,char16_t:1,char32_t:1,constexpr:1,decltype:1,noexcept:1,nullptr:1,static_assert:1,thread_local:1,restrict:1,_Bool:1,complex:1},built_in:{std:1,string:1,cin:1,cout:1,cerr:1,clog:1,stringstream:1,istringstream:1,ostringstream:1,auto_ptr:1,deque:1,list:1,queue:1,stack:1,vector:1,map:1,set:1,bitset:1,multiset:1,multimap:1,unordered_set:1,unordered_map:1,unordered_multiset:1,unordered_multimap:1,array:1,shared_ptr:1}};return{dM:{k:a,i:"</",c:[hljs.CLCM,hljs.CBLCLM,hljs.QSM,{cN:"string",b:"'\\\\?.",e:"'",i:"."},{cN:"number",b:"\\b(\\d+(\\.\\d*)?|\\.\\d+)(u|U|l|L|ul|UL|f|F)"},hljs.CNM,{cN:"preprocessor",b:"#",e:"$"},{cN:"stl_container",b:"\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<",e:">",k:a,r:10,c:["self"]}]}}}();hljs.LANGUAGES.r={dM:{c:[hljs.HCM,{cN:"number",b:"\\b0[xX][0-9a-fA-F]+[Li]?\\b",e:hljs.IMMEDIATE_RE,r:0},{cN:"number",b:"\\b\\d+(?:[eE][+\\-]?\\d*)?L\\b",e:hljs.IMMEDIATE_RE,r:0},{cN:"number",b:"\\b\\d+\\.(?!\\d)(?:i\\b)?",e:hljs.IMMEDIATE_RE,r:1},{cN:"number",b:"\\b\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d*)?i?\\b",e:hljs.IMMEDIATE_RE,r:0},{cN:"number",b:"\\.\\d+(?:[eE][+\\-]?\\d*)?i?\\b",e:hljs.IMMEDIATE_RE,r:1},{cN:"keyword",b:"(?:tryCatch|library|setGeneric|setGroupGeneric)\\b",e:hljs.IMMEDIATE_RE,r:10},{cN:"keyword",b:"\\.\\.\\.",e:hljs.IMMEDIATE_RE,r:10},{cN:"keyword",b:"\\.\\.\\d+(?![\\w.])",e:hljs.IMMEDIATE_RE,r:10},{cN:"keyword",b:"\\b(?:function)",e:hljs.IMMEDIATE_RE,r:2},{cN:"keyword",b:"(?:if|in|break|next|repeat|else|for|return|switch|while|try|stop|warning|require|attach|detach|source|setMethod|setClass)\\b",e:hljs.IMMEDIATE_RE,r:1},{cN:"literal",b:"(?:NA|NA_integer_|NA_real_|NA_character_|NA_complex_)\\b",e:hljs.IMMEDIATE_RE,r:10},{cN:"literal",b:"(?:NULL|TRUE|FALSE|T|F|Inf|NaN)\\b",e:hljs.IMMEDIATE_RE,r:1},{cN:"identifier",b:"[a-zA-Z.][a-zA-Z0-9._]*\\b",e:hljs.IMMEDIATE_RE,r:0},{cN:"operator",b:"<\\-(?!\\s*\\d)",e:hljs.IMMEDIATE_RE,r:2},{cN:"operator",b:"\\->|<\\-",e:hljs.IMMEDIATE_RE,r:1},{cN:"operator",b:"%%|~",e:hljs.IMMEDIATE_RE},{cN:"operator",b:">=|<=|==|!=|\\|\\||&&|=|\\+|\\-|\\*|/|\\^|>|<|!|&|\\||\\$|:",e:hljs.IMMEDIATE_RE,r:0},{cN:"operator",b:"%",e:"%",i:"\\n",r:1},{cN:"identifier",b:"`",e:"`",r:0},{cN:"string",b:'"',e:'"',c:[hljs.BE],r:0},{cN:"string",b:"'",e:"'",c:[hljs.BE],r:0},{cN:"paren",b:"[[({\\])}]",e:hljs.IMMEDIATE_RE,r:0}]}};
hljs.initHighlightingOnLoad();
</script>




</head>

<body>
<h1>Practical Machine Learning Project </h1>

<p>This is the project of the course &ldquo;Practical Machine Learning&rdquo;. The aim of this project is to predict the manner in which the participants of the experiment did an exercise. The exercise consists on lifting a weight. The information of the movement is catched by several sensors and stored in a dataframe.</p>

<p>For more information you can read the article showed in this link: <a href="http://groupware.les.inf.puc-rio.br/public/papers/2013.Velloso.QAR-WLE.pdf">http://groupware.les.inf.puc-rio.br/public/papers/2013.Velloso.QAR-WLE.pdf</a></p>

<p>The first thing is to take a look in to the data and discard some features which don&#39;t provide us information at all.In this case all columns including NA values will be removed.</p>

<p>After the cleaning up, data is loaded.</p>

<pre><code class="r">data = read.csv2(file.path(&quot;C:/Users/HOME/Documents/Proyecto_Machine_Learnin/Training_Set&quot;,&quot;training_data_cleaned.csv&quot;))
table(data)
</code></pre>

<pre><code>## Error: attempt to make a table with &gt;= 2^31 elements
</code></pre>

<p>Now is time for split data into Training set and Test set.</p>

<pre><code class="r">library(caret)
</code></pre>

<pre><code>## Loading required package: lattice
## Loading required package: ggplot2
</code></pre>

<pre><code class="r">set.seed(1234)
inTrain&lt;-createDataPartition(y=data$classe,p=0.7,list=FALSE)
trainingSet&lt;-data[inTrain,]
testingSet&lt;-data[-inTrain,]
</code></pre>

<p>Although the number of features has been reduced there are still too many features that may not provide useful information for predicting.They are features that have little variability. In this case it is applied a function that will show up those features.</p>

<pre><code class="r">nsv&lt;-nearZeroVar(trainingSet[,-53],saveMetrics=TRUE)
nsv
</code></pre>

<pre><code>##                      freqRatio percentUnique zeroVar   nzv
## roll_belt                1.098        8.0731   FALSE FALSE
## pitch_belt               1.107       12.2297   FALSE FALSE
## yaw_belt                 1.060       12.9359   FALSE FALSE
## total_accel_belt         1.062        0.2111   FALSE FALSE
## gyros_belt_x             1.083        0.9609   FALSE FALSE
## gyros_belt_y             1.135        0.4877   FALSE FALSE
## gyros_belt_z             1.048        1.2084   FALSE FALSE
## accel_belt_x             1.046        1.1866   FALSE FALSE
## accel_belt_y             1.136        0.9900   FALSE FALSE
## accel_belt_z             1.148        2.1038   FALSE FALSE
## magnet_belt_x            1.015        2.2421   FALSE FALSE
## magnet_belt_y            1.071        2.0820   FALSE FALSE
## magnet_belt_z            1.003        3.1885   FALSE FALSE
## roll_arm                52.667       17.5875   FALSE FALSE
## pitch_arm               79.000       20.3465   FALSE FALSE
## yaw_arm                 31.600       19.2764   FALSE FALSE
## total_accel_arm          1.024        0.4732   FALSE FALSE
## gyros_arm_x              1.008        4.6080   FALSE FALSE
## gyros_arm_y              1.479        2.6935   FALSE FALSE
## gyros_arm_z              1.156        1.7398   FALSE FALSE
## accel_arm_x              1.067        5.5616   FALSE FALSE
## accel_arm_y              1.020        3.8582   FALSE FALSE
## accel_arm_z              1.066        5.6344   FALSE FALSE
## magnet_arm_x             1.068        9.6819   FALSE FALSE
## magnet_arm_y             1.062        6.2459   FALSE FALSE
## magnet_arm_z             1.117        9.1141   FALSE FALSE
## roll_dumbbell            1.126       86.5618   FALSE FALSE
## pitch_dumbbell           2.316       84.3634   FALSE FALSE
## yaw_dumbbell             1.140       86.1251   FALSE FALSE
## total_accel_dumbbell     1.089        0.3057   FALSE FALSE
## gyros_dumbbell_x         1.033        1.7107   FALSE FALSE
## gyros_dumbbell_y         1.210        1.9582   FALSE FALSE
## gyros_dumbbell_z         1.090        1.3904   FALSE FALSE
## accel_dumbbell_x         1.078        2.9482   FALSE FALSE
## accel_dumbbell_y         1.132        3.3122   FALSE FALSE
## accel_dumbbell_z         1.146        2.9046   FALSE FALSE
## magnet_dumbbell_x        1.023        7.8037   FALSE FALSE
## magnet_dumbbell_y        1.254        6.0202   FALSE FALSE
## magnet_dumbbell_z        1.015        4.8482   FALSE FALSE
## roll_forearm            10.623       13.6347   FALSE FALSE
## pitch_forearm           73.757       18.9925   FALSE FALSE
## yaw_forearm             15.684       12.8776   FALSE FALSE
## total_accel_forearm      1.118        0.4877   FALSE FALSE
## gyros_forearm_x          1.056        2.0820   FALSE FALSE
## gyros_forearm_y          1.022        5.2559   FALSE FALSE
## gyros_forearm_z          1.140        2.1184   FALSE FALSE
## accel_forearm_x          1.109        5.6490   FALSE FALSE
## accel_forearm_y          1.091        7.1340   FALSE FALSE
## accel_forearm_z          1.112        4.0547   FALSE FALSE
## magnet_forearm_x         1.088       10.6865   FALSE FALSE
## magnet_forearm_y         1.103       13.3217   FALSE FALSE
## magnet_forearm_z         1.070       11.7275   FALSE FALSE
</code></pre>

<p>As result all variables have enough variability for being used as predictors. However they are too many for the computer to run with all of them. For reducing the number of features we will try in this case to search for highly correlated variables.</p>

<pre><code class="r">M&lt;-abs(cor(trainingSet[sapply(trainingSet,is.numeric)]))
diag(M)&lt;-0
which(M&gt;0.8,arr.ind=T)
</code></pre>

<pre><code>##                  row col
## accel_belt_y       3   1
## accel_belt_z       4   1
## magnet_belt_x      5   2
## total_accel_belt   1   3
## accel_belt_z       4   3
## total_accel_belt   1   4
## accel_belt_y       3   4
## accel_belt_x       2   5
## magnet_arm_x      12   9
## accel_arm_x        9  12
## magnet_arm_z      14  13
## magnet_arm_y      13  14
</code></pre>

<p>From the results we can delete now some variables which are highly correlated. We have to do it both in trainingSet and testingSet.</p>

<pre><code class="r">trainingSet$accel_belt_y&lt;-trainingSet$accel_belt_z&lt;-trainingSet$magnet_belt_x&lt;-trainingSet$magnet_arm_x&lt;-trainingSet$magnet_arm_z&lt;-NULL

testingSet$accel_belt_y&lt;-testingSet$accel_belt_z&lt;-testingSet$magnet_belt_x&lt;-testingSet$magnet_arm_x&lt;-testingSet$magnet_arm_z&lt;-NULL
</code></pre>

<p>At this moment we need in somehow compress all features in new ones that are a weighted combination of original features. This method called principal components (PCA) will allow us to have a few predictors with high significance.</p>

<pre><code class="r">preProc &lt;- preProcess(trainingSet[sapply(trainingSet,is.numeric)],method=&quot;pca&quot;,pcaComp=2)
trainPC &lt;- predict(preProc,trainingSet[sapply(trainingSet,is.numeric)])
</code></pre>

<p>Finally it will be fitted the model with the method &ldquo;Naive Bayes&rdquo;</p>

<pre><code class="r">modelFit&lt;-train(trainingSet$classe~.,method=&quot;nb&quot;,data=trainPC)
</code></pre>

<pre><code>## Loading required package: klaR
## Loading required package: MASS
</code></pre>

<p>Now it is time to predict values from the testing set and see how well the model has done it.</p>

<pre><code class="r">testPC &lt;- predict(preProc,testingSet[sapply(testingSet,is.numeric)])
testing_results&lt;-predict(modelFit,testPC)

confusionMatrix(testingSet$classe,testing_results)
</code></pre>

<pre><code>## Confusion Matrix and Statistics
## 
##           Reference
## Prediction    A    B    C    D    E
##          A 1233  201   62  151   27
##          B  449  387  103  129   71
##          C  447  243  176  125   35
##          D  281  201   64  378   40
##          E  410  206   61  208  197
## 
## Overall Statistics
##                                        
##                Accuracy : 0.403        
##                  95% CI : (0.39, 0.416)
##     No Information Rate : 0.479        
##     P-Value [Acc &gt; NIR] : 1            
##                                        
##                   Kappa : 0.225        
##  Mcnemar&#39;s Test P-Value : &lt;2e-16       
## 
## Statistics by Class:
## 
##                      Class: A Class: B Class: C Class: D Class: E
## Sensitivity             0.437   0.3126   0.3777   0.3814   0.5324
## Specificity             0.856   0.8382   0.8431   0.8803   0.8395
## Pos Pred Value          0.737   0.3398   0.1715   0.3921   0.1821
## Neg Pred Value          0.623   0.8207   0.9403   0.8754   0.9640
## Prevalence              0.479   0.2104   0.0792   0.1684   0.0629
## Detection Rate          0.210   0.0658   0.0299   0.0642   0.0335
## Detection Prevalence    0.284   0.1935   0.1743   0.1638   0.1839
## Balanced Accuracy       0.647   0.5754   0.6104   0.6308   0.6860
</code></pre>

<p>Results show a not good performance of the model. Among other things the selection of the features and their interpretation might not have been precise and that has provocated the malfunction of the system.</p>

</body>

</html>

